// source: searcher.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var dto_pb = require('./dto_pb.js');
goog.object.extend(proto, dto_pb);
goog.exportSymbol('proto.searcher.AddressSubscriptionV0', null, global);
goog.exportSymbol('proto.searcher.BundleResult', null, global);
goog.exportSymbol('proto.searcher.BundleResult.ResultCase', null, global);
goog.exportSymbol('proto.searcher.BundleResultAuctionFailed', null, global);
goog.exportSymbol('proto.searcher.BundleResultAuctionFailed.ReasonCase', null, global);
goog.exportSymbol('proto.searcher.BundleResultAuctionFailedEstimate', null, global);
goog.exportSymbol('proto.searcher.BundleResultAuctionLoose', null, global);
goog.exportSymbol('proto.searcher.BundleResultAuctionWin', null, global);
goog.exportSymbol('proto.searcher.BundleResultInternalError', null, global);
goog.exportSymbol('proto.searcher.BundleResultInterrupted', null, global);
goog.exportSymbol('proto.searcher.BundleResultInterrupted.ReasonCase', null, global);
goog.exportSymbol('proto.searcher.BundleResultPartiallyExpired', null, global);
goog.exportSymbol('proto.searcher.BundleResultPartiallyProcessed', null, global);
goog.exportSymbol('proto.searcher.GetTipAddressesRequest', null, global);
goog.exportSymbol('proto.searcher.GetTipAddressesResponse', null, global);
goog.exportSymbol('proto.searcher.MempoolSubscription', null, global);
goog.exportSymbol('proto.searcher.SendBundleResponse', null, global);
goog.exportSymbol('proto.searcher.SubscribeBundleResultsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.AddressSubscriptionV0 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.AddressSubscriptionV0.repeatedFields_, null);
};
goog.inherits(proto.searcher.AddressSubscriptionV0, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.AddressSubscriptionV0.displayName = 'proto.searcher.AddressSubscriptionV0';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.MempoolSubscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.MempoolSubscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.MempoolSubscription.displayName = 'proto.searcher.MempoolSubscription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.SendBundleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.SendBundleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.SendBundleResponse.displayName = 'proto.searcher.SendBundleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.GetTipAddressesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.GetTipAddressesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.GetTipAddressesRequest.displayName = 'proto.searcher.GetTipAddressesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.GetTipAddressesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.GetTipAddressesResponse.repeatedFields_, null);
};
goog.inherits(proto.searcher.GetTipAddressesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.GetTipAddressesResponse.displayName = 'proto.searcher.GetTipAddressesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.SubscribeBundleResultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.SubscribeBundleResultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.SubscribeBundleResultsRequest.displayName = 'proto.searcher.SubscribeBundleResultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultAuctionWin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.BundleResultAuctionWin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultAuctionWin.displayName = 'proto.searcher.BundleResultAuctionWin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultAuctionLoose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.BundleResultAuctionLoose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultAuctionLoose.displayName = 'proto.searcher.BundleResultAuctionLoose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultPartiallyProcessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.BundleResultPartiallyProcessed.repeatedFields_, null);
};
goog.inherits(proto.searcher.BundleResultPartiallyProcessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultPartiallyProcessed.displayName = 'proto.searcher.BundleResultPartiallyProcessed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultPartiallyExpired = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.BundleResultPartiallyExpired.repeatedFields_, null);
};
goog.inherits(proto.searcher.BundleResultPartiallyExpired, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultPartiallyExpired.displayName = 'proto.searcher.BundleResultPartiallyExpired';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultInterrupted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.searcher.BundleResultInterrupted.oneofGroups_);
};
goog.inherits(proto.searcher.BundleResultInterrupted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultInterrupted.displayName = 'proto.searcher.BundleResultInterrupted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultAuctionFailedEstimate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.BundleResultAuctionFailedEstimate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultAuctionFailedEstimate.displayName = 'proto.searcher.BundleResultAuctionFailedEstimate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultInternalError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.BundleResultInternalError.repeatedFields_, null);
};
goog.inherits(proto.searcher.BundleResultInternalError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultInternalError.displayName = 'proto.searcher.BundleResultInternalError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResultAuctionFailed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.searcher.BundleResultAuctionFailed.oneofGroups_);
};
goog.inherits(proto.searcher.BundleResultAuctionFailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResultAuctionFailed.displayName = 'proto.searcher.BundleResultAuctionFailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.BundleResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.searcher.BundleResult.oneofGroups_);
};
goog.inherits(proto.searcher.BundleResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.BundleResult.displayName = 'proto.searcher.BundleResult';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.AddressSubscriptionV0.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.AddressSubscriptionV0.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.AddressSubscriptionV0.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.AddressSubscriptionV0} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.AddressSubscriptionV0.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.AddressSubscriptionV0}
 */
proto.searcher.AddressSubscriptionV0.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.AddressSubscriptionV0;
  return proto.searcher.AddressSubscriptionV0.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.AddressSubscriptionV0} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.AddressSubscriptionV0}
 */
proto.searcher.AddressSubscriptionV0.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.AddressSubscriptionV0.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.AddressSubscriptionV0.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.AddressSubscriptionV0} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.AddressSubscriptionV0.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string address = 1;
 * @return {!Array<string>}
 */
proto.searcher.AddressSubscriptionV0.prototype.getAddressList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.AddressSubscriptionV0} returns this
 */
proto.searcher.AddressSubscriptionV0.prototype.setAddressList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.AddressSubscriptionV0} returns this
 */
proto.searcher.AddressSubscriptionV0.prototype.addAddress = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.AddressSubscriptionV0} returns this
 */
proto.searcher.AddressSubscriptionV0.prototype.clearAddressList = function() {
  return this.setAddressList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.MempoolSubscription.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.MempoolSubscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.MempoolSubscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.MempoolSubscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    addresses: (f = msg.getAddresses()) && proto.searcher.AddressSubscriptionV0.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.MempoolSubscription}
 */
proto.searcher.MempoolSubscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.MempoolSubscription;
  return proto.searcher.MempoolSubscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.MempoolSubscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.MempoolSubscription}
 */
proto.searcher.MempoolSubscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.searcher.AddressSubscriptionV0;
      reader.readMessage(value,proto.searcher.AddressSubscriptionV0.deserializeBinaryFromReader);
      msg.setAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.MempoolSubscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.MempoolSubscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.MempoolSubscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.MempoolSubscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddresses();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.searcher.AddressSubscriptionV0.serializeBinaryToWriter
    );
  }
};


/**
 * optional AddressSubscriptionV0 addresses = 1;
 * @return {?proto.searcher.AddressSubscriptionV0}
 */
proto.searcher.MempoolSubscription.prototype.getAddresses = function() {
  return /** @type{?proto.searcher.AddressSubscriptionV0} */ (
    jspb.Message.getWrapperField(this, proto.searcher.AddressSubscriptionV0, 1));
};


/**
 * @param {?proto.searcher.AddressSubscriptionV0|undefined} value
 * @return {!proto.searcher.MempoolSubscription} returns this
*/
proto.searcher.MempoolSubscription.prototype.setAddresses = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.MempoolSubscription} returns this
 */
proto.searcher.MempoolSubscription.prototype.clearAddresses = function() {
  return this.setAddresses(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.MempoolSubscription.prototype.hasAddresses = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.SendBundleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.SendBundleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.SendBundleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SendBundleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.SendBundleResponse}
 */
proto.searcher.SendBundleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.SendBundleResponse;
  return proto.searcher.SendBundleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.SendBundleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.SendBundleResponse}
 */
proto.searcher.SendBundleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.SendBundleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.SendBundleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.SendBundleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SendBundleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.searcher.SendBundleResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.SendBundleResponse} returns this
 */
proto.searcher.SendBundleResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.GetTipAddressesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.GetTipAddressesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.GetTipAddressesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAddressesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.GetTipAddressesRequest}
 */
proto.searcher.GetTipAddressesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.GetTipAddressesRequest;
  return proto.searcher.GetTipAddressesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.GetTipAddressesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.GetTipAddressesRequest}
 */
proto.searcher.GetTipAddressesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.GetTipAddressesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.GetTipAddressesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.GetTipAddressesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAddressesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.GetTipAddressesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.GetTipAddressesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.GetTipAddressesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.GetTipAddressesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAddressesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.GetTipAddressesResponse}
 */
proto.searcher.GetTipAddressesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.GetTipAddressesResponse;
  return proto.searcher.GetTipAddressesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.GetTipAddressesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.GetTipAddressesResponse}
 */
proto.searcher.GetTipAddressesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.GetTipAddressesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.GetTipAddressesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.GetTipAddressesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAddressesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string address = 1;
 * @return {!Array<string>}
 */
proto.searcher.GetTipAddressesResponse.prototype.getAddressList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.GetTipAddressesResponse} returns this
 */
proto.searcher.GetTipAddressesResponse.prototype.setAddressList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.GetTipAddressesResponse} returns this
 */
proto.searcher.GetTipAddressesResponse.prototype.addAddress = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.GetTipAddressesResponse} returns this
 */
proto.searcher.GetTipAddressesResponse.prototype.clearAddressList = function() {
  return this.setAddressList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.SubscribeBundleResultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.SubscribeBundleResultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.SubscribeBundleResultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SubscribeBundleResultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.SubscribeBundleResultsRequest}
 */
proto.searcher.SubscribeBundleResultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.SubscribeBundleResultsRequest;
  return proto.searcher.SubscribeBundleResultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.SubscribeBundleResultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.SubscribeBundleResultsRequest}
 */
proto.searcher.SubscribeBundleResultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.SubscribeBundleResultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.SubscribeBundleResultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.SubscribeBundleResultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SubscribeBundleResultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultAuctionWin.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultAuctionWin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultAuctionWin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionWin.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    estimatedNanotonTip: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultAuctionWin}
 */
proto.searcher.BundleResultAuctionWin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultAuctionWin;
  return proto.searcher.BundleResultAuctionWin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultAuctionWin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultAuctionWin}
 */
proto.searcher.BundleResultAuctionWin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEstimatedNanotonTip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultAuctionWin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultAuctionWin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultAuctionWin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionWin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEstimatedNanotonTip();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.searcher.BundleResultAuctionWin.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultAuctionWin} returns this
 */
proto.searcher.BundleResultAuctionWin.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 estimated_nanoton_tip = 2;
 * @return {number}
 */
proto.searcher.BundleResultAuctionWin.prototype.getEstimatedNanotonTip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.searcher.BundleResultAuctionWin} returns this
 */
proto.searcher.BundleResultAuctionWin.prototype.setEstimatedNanotonTip = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultAuctionLoose.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultAuctionLoose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultAuctionLoose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionLoose.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultAuctionLoose}
 */
proto.searcher.BundleResultAuctionLoose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultAuctionLoose;
  return proto.searcher.BundleResultAuctionLoose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultAuctionLoose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultAuctionLoose}
 */
proto.searcher.BundleResultAuctionLoose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultAuctionLoose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultAuctionLoose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultAuctionLoose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionLoose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.searcher.BundleResultAuctionLoose.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultAuctionLoose} returns this
 */
proto.searcher.BundleResultAuctionLoose.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.BundleResultPartiallyProcessed.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultPartiallyProcessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultPartiallyProcessed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultPartiallyProcessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    digestList: msg.getDigestList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultPartiallyProcessed}
 */
proto.searcher.BundleResultPartiallyProcessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultPartiallyProcessed;
  return proto.searcher.BundleResultPartiallyProcessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultPartiallyProcessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultPartiallyProcessed}
 */
proto.searcher.BundleResultPartiallyProcessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDigest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultPartiallyProcessed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultPartiallyProcessed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultPartiallyProcessed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDigestList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultPartiallyProcessed} returns this
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated bytes digest = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.getDigestList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes digest = 2;
 * This is a type-conversion wrapper around `getDigestList()`
 * @return {!Array<string>}
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.getDigestList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDigestList()));
};


/**
 * repeated bytes digest = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigestList()`
 * @return {!Array<!Uint8Array>}
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.getDigestList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDigestList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.searcher.BundleResultPartiallyProcessed} returns this
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.setDigestList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.searcher.BundleResultPartiallyProcessed} returns this
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.addDigest = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.BundleResultPartiallyProcessed} returns this
 */
proto.searcher.BundleResultPartiallyProcessed.prototype.clearDigestList = function() {
  return this.setDigestList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.BundleResultPartiallyExpired.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultPartiallyExpired.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultPartiallyExpired.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultPartiallyExpired} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultPartiallyExpired.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    digestList: msg.getDigestList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultPartiallyExpired}
 */
proto.searcher.BundleResultPartiallyExpired.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultPartiallyExpired;
  return proto.searcher.BundleResultPartiallyExpired.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultPartiallyExpired} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultPartiallyExpired}
 */
proto.searcher.BundleResultPartiallyExpired.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDigest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultPartiallyExpired.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultPartiallyExpired.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultPartiallyExpired} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultPartiallyExpired.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDigestList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.searcher.BundleResultPartiallyExpired.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultPartiallyExpired} returns this
 */
proto.searcher.BundleResultPartiallyExpired.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated bytes digest = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.searcher.BundleResultPartiallyExpired.prototype.getDigestList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes digest = 2;
 * This is a type-conversion wrapper around `getDigestList()`
 * @return {!Array<string>}
 */
proto.searcher.BundleResultPartiallyExpired.prototype.getDigestList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDigestList()));
};


/**
 * repeated bytes digest = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigestList()`
 * @return {!Array<!Uint8Array>}
 */
proto.searcher.BundleResultPartiallyExpired.prototype.getDigestList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDigestList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.searcher.BundleResultPartiallyExpired} returns this
 */
proto.searcher.BundleResultPartiallyExpired.prototype.setDigestList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.searcher.BundleResultPartiallyExpired} returns this
 */
proto.searcher.BundleResultPartiallyExpired.prototype.addDigest = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.BundleResultPartiallyExpired} returns this
 */
proto.searcher.BundleResultPartiallyExpired.prototype.clearDigestList = function() {
  return this.setDigestList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.searcher.BundleResultInterrupted.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.searcher.BundleResultInterrupted.ReasonCase = {
  REASON_NOT_SET: 0,
  PARTIALLY_PROCESSED: 2,
  EXPIRED: 3
};

/**
 * @return {proto.searcher.BundleResultInterrupted.ReasonCase}
 */
proto.searcher.BundleResultInterrupted.prototype.getReasonCase = function() {
  return /** @type {proto.searcher.BundleResultInterrupted.ReasonCase} */(jspb.Message.computeOneofCase(this, proto.searcher.BundleResultInterrupted.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultInterrupted.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultInterrupted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultInterrupted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultInterrupted.toObject = function(includeInstance, msg) {
  var f, obj = {
    onAuction: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    partiallyProcessed: (f = msg.getPartiallyProcessed()) && proto.searcher.BundleResultPartiallyProcessed.toObject(includeInstance, f),
    expired: (f = msg.getExpired()) && proto.searcher.BundleResultPartiallyExpired.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultInterrupted}
 */
proto.searcher.BundleResultInterrupted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultInterrupted;
  return proto.searcher.BundleResultInterrupted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultInterrupted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultInterrupted}
 */
proto.searcher.BundleResultInterrupted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnAuction(value);
      break;
    case 2:
      var value = new proto.searcher.BundleResultPartiallyProcessed;
      reader.readMessage(value,proto.searcher.BundleResultPartiallyProcessed.deserializeBinaryFromReader);
      msg.setPartiallyProcessed(value);
      break;
    case 3:
      var value = new proto.searcher.BundleResultPartiallyExpired;
      reader.readMessage(value,proto.searcher.BundleResultPartiallyExpired.deserializeBinaryFromReader);
      msg.setExpired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultInterrupted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultInterrupted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultInterrupted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultInterrupted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnAuction();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPartiallyProcessed();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.searcher.BundleResultPartiallyProcessed.serializeBinaryToWriter
    );
  }
  f = message.getExpired();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.searcher.BundleResultPartiallyExpired.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool on_auction = 1;
 * @return {boolean}
 */
proto.searcher.BundleResultInterrupted.prototype.getOnAuction = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.searcher.BundleResultInterrupted} returns this
 */
proto.searcher.BundleResultInterrupted.prototype.setOnAuction = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional BundleResultPartiallyProcessed partially_processed = 2;
 * @return {?proto.searcher.BundleResultPartiallyProcessed}
 */
proto.searcher.BundleResultInterrupted.prototype.getPartiallyProcessed = function() {
  return /** @type{?proto.searcher.BundleResultPartiallyProcessed} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultPartiallyProcessed, 2));
};


/**
 * @param {?proto.searcher.BundleResultPartiallyProcessed|undefined} value
 * @return {!proto.searcher.BundleResultInterrupted} returns this
*/
proto.searcher.BundleResultInterrupted.prototype.setPartiallyProcessed = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.searcher.BundleResultInterrupted.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResultInterrupted} returns this
 */
proto.searcher.BundleResultInterrupted.prototype.clearPartiallyProcessed = function() {
  return this.setPartiallyProcessed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResultInterrupted.prototype.hasPartiallyProcessed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BundleResultPartiallyExpired expired = 3;
 * @return {?proto.searcher.BundleResultPartiallyExpired}
 */
proto.searcher.BundleResultInterrupted.prototype.getExpired = function() {
  return /** @type{?proto.searcher.BundleResultPartiallyExpired} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultPartiallyExpired, 3));
};


/**
 * @param {?proto.searcher.BundleResultPartiallyExpired|undefined} value
 * @return {!proto.searcher.BundleResultInterrupted} returns this
*/
proto.searcher.BundleResultInterrupted.prototype.setExpired = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.searcher.BundleResultInterrupted.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResultInterrupted} returns this
 */
proto.searcher.BundleResultInterrupted.prototype.clearExpired = function() {
  return this.setExpired(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResultInterrupted.prototype.hasExpired = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultAuctionFailedEstimate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultAuctionFailedEstimate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionFailedEstimate.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    digest: msg.getDigest_asB64(),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultAuctionFailedEstimate}
 */
proto.searcher.BundleResultAuctionFailedEstimate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultAuctionFailedEstimate;
  return proto.searcher.BundleResultAuctionFailedEstimate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultAuctionFailedEstimate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultAuctionFailedEstimate}
 */
proto.searcher.BundleResultAuctionFailedEstimate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDigest(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultAuctionFailedEstimate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultAuctionFailedEstimate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionFailedEstimate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDigest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultAuctionFailedEstimate} returns this
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes digest = 2;
 * @return {!(string|Uint8Array)}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.getDigest = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes digest = 2;
 * This is a type-conversion wrapper around `getDigest()`
 * @return {string}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.getDigest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDigest()));
};


/**
 * optional bytes digest = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigest()`
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.getDigest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDigest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.searcher.BundleResultAuctionFailedEstimate} returns this
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.setDigest = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultAuctionFailedEstimate} returns this
 */
proto.searcher.BundleResultAuctionFailedEstimate.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.BundleResultInternalError.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultInternalError.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultInternalError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultInternalError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultInternalError.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    digestList: msg.getDigestList_asB64(),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultInternalError}
 */
proto.searcher.BundleResultInternalError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultInternalError;
  return proto.searcher.BundleResultInternalError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultInternalError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultInternalError}
 */
proto.searcher.BundleResultInternalError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDigest(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultInternalError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultInternalError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultInternalError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultInternalError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDigestList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.searcher.BundleResultInternalError.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultInternalError} returns this
 */
proto.searcher.BundleResultInternalError.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated bytes digest = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.searcher.BundleResultInternalError.prototype.getDigestList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes digest = 2;
 * This is a type-conversion wrapper around `getDigestList()`
 * @return {!Array<string>}
 */
proto.searcher.BundleResultInternalError.prototype.getDigestList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDigestList()));
};


/**
 * repeated bytes digest = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigestList()`
 * @return {!Array<!Uint8Array>}
 */
proto.searcher.BundleResultInternalError.prototype.getDigestList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDigestList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.searcher.BundleResultInternalError} returns this
 */
proto.searcher.BundleResultInternalError.prototype.setDigestList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.searcher.BundleResultInternalError} returns this
 */
proto.searcher.BundleResultInternalError.prototype.addDigest = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.BundleResultInternalError} returns this
 */
proto.searcher.BundleResultInternalError.prototype.clearDigestList = function() {
  return this.setDigestList([]);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.searcher.BundleResultInternalError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResultInternalError} returns this
 */
proto.searcher.BundleResultInternalError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.searcher.BundleResultAuctionFailed.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.searcher.BundleResultAuctionFailed.ReasonCase = {
  REASON_NOT_SET: 0,
  ESTIMATE_ERROR: 1,
  INTERNAL_ERROR: 2
};

/**
 * @return {proto.searcher.BundleResultAuctionFailed.ReasonCase}
 */
proto.searcher.BundleResultAuctionFailed.prototype.getReasonCase = function() {
  return /** @type {proto.searcher.BundleResultAuctionFailed.ReasonCase} */(jspb.Message.computeOneofCase(this, proto.searcher.BundleResultAuctionFailed.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResultAuctionFailed.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResultAuctionFailed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResultAuctionFailed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionFailed.toObject = function(includeInstance, msg) {
  var f, obj = {
    estimateError: (f = msg.getEstimateError()) && proto.searcher.BundleResultAuctionFailedEstimate.toObject(includeInstance, f),
    internalError: (f = msg.getInternalError()) && proto.searcher.BundleResultInternalError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResultAuctionFailed}
 */
proto.searcher.BundleResultAuctionFailed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResultAuctionFailed;
  return proto.searcher.BundleResultAuctionFailed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResultAuctionFailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResultAuctionFailed}
 */
proto.searcher.BundleResultAuctionFailed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.searcher.BundleResultAuctionFailedEstimate;
      reader.readMessage(value,proto.searcher.BundleResultAuctionFailedEstimate.deserializeBinaryFromReader);
      msg.setEstimateError(value);
      break;
    case 2:
      var value = new proto.searcher.BundleResultInternalError;
      reader.readMessage(value,proto.searcher.BundleResultInternalError.deserializeBinaryFromReader);
      msg.setInternalError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResultAuctionFailed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResultAuctionFailed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResultAuctionFailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResultAuctionFailed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEstimateError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.searcher.BundleResultAuctionFailedEstimate.serializeBinaryToWriter
    );
  }
  f = message.getInternalError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.searcher.BundleResultInternalError.serializeBinaryToWriter
    );
  }
};


/**
 * optional BundleResultAuctionFailedEstimate estimate_error = 1;
 * @return {?proto.searcher.BundleResultAuctionFailedEstimate}
 */
proto.searcher.BundleResultAuctionFailed.prototype.getEstimateError = function() {
  return /** @type{?proto.searcher.BundleResultAuctionFailedEstimate} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultAuctionFailedEstimate, 1));
};


/**
 * @param {?proto.searcher.BundleResultAuctionFailedEstimate|undefined} value
 * @return {!proto.searcher.BundleResultAuctionFailed} returns this
*/
proto.searcher.BundleResultAuctionFailed.prototype.setEstimateError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.searcher.BundleResultAuctionFailed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResultAuctionFailed} returns this
 */
proto.searcher.BundleResultAuctionFailed.prototype.clearEstimateError = function() {
  return this.setEstimateError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResultAuctionFailed.prototype.hasEstimateError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BundleResultInternalError internal_error = 2;
 * @return {?proto.searcher.BundleResultInternalError}
 */
proto.searcher.BundleResultAuctionFailed.prototype.getInternalError = function() {
  return /** @type{?proto.searcher.BundleResultInternalError} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultInternalError, 2));
};


/**
 * @param {?proto.searcher.BundleResultInternalError|undefined} value
 * @return {!proto.searcher.BundleResultAuctionFailed} returns this
*/
proto.searcher.BundleResultAuctionFailed.prototype.setInternalError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.searcher.BundleResultAuctionFailed.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResultAuctionFailed} returns this
 */
proto.searcher.BundleResultAuctionFailed.prototype.clearInternalError = function() {
  return this.setInternalError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResultAuctionFailed.prototype.hasInternalError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.searcher.BundleResult.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.searcher.BundleResult.ResultCase = {
  RESULT_NOT_SET: 0,
  WIN: 2,
  LOOSE: 3,
  DROP: 4,
  FAILURE: 5
};

/**
 * @return {proto.searcher.BundleResult.ResultCase}
 */
proto.searcher.BundleResult.prototype.getResultCase = function() {
  return /** @type {proto.searcher.BundleResult.ResultCase} */(jspb.Message.computeOneofCase(this, proto.searcher.BundleResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.BundleResult.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.BundleResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.BundleResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    win: (f = msg.getWin()) && proto.searcher.BundleResultAuctionWin.toObject(includeInstance, f),
    loose: (f = msg.getLoose()) && proto.searcher.BundleResultAuctionLoose.toObject(includeInstance, f),
    drop: (f = msg.getDrop()) && proto.searcher.BundleResultInterrupted.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && proto.searcher.BundleResultAuctionFailed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.BundleResult}
 */
proto.searcher.BundleResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.BundleResult;
  return proto.searcher.BundleResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.BundleResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.BundleResult}
 */
proto.searcher.BundleResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.searcher.BundleResultAuctionWin;
      reader.readMessage(value,proto.searcher.BundleResultAuctionWin.deserializeBinaryFromReader);
      msg.setWin(value);
      break;
    case 3:
      var value = new proto.searcher.BundleResultAuctionLoose;
      reader.readMessage(value,proto.searcher.BundleResultAuctionLoose.deserializeBinaryFromReader);
      msg.setLoose(value);
      break;
    case 4:
      var value = new proto.searcher.BundleResultInterrupted;
      reader.readMessage(value,proto.searcher.BundleResultInterrupted.deserializeBinaryFromReader);
      msg.setDrop(value);
      break;
    case 5:
      var value = new proto.searcher.BundleResultAuctionFailed;
      reader.readMessage(value,proto.searcher.BundleResultAuctionFailed.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.BundleResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.BundleResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.BundleResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.BundleResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWin();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.searcher.BundleResultAuctionWin.serializeBinaryToWriter
    );
  }
  f = message.getLoose();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.searcher.BundleResultAuctionLoose.serializeBinaryToWriter
    );
  }
  f = message.getDrop();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.searcher.BundleResultInterrupted.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.searcher.BundleResultAuctionFailed.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.searcher.BundleResult.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.BundleResult} returns this
 */
proto.searcher.BundleResult.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BundleResultAuctionWin win = 2;
 * @return {?proto.searcher.BundleResultAuctionWin}
 */
proto.searcher.BundleResult.prototype.getWin = function() {
  return /** @type{?proto.searcher.BundleResultAuctionWin} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultAuctionWin, 2));
};


/**
 * @param {?proto.searcher.BundleResultAuctionWin|undefined} value
 * @return {!proto.searcher.BundleResult} returns this
*/
proto.searcher.BundleResult.prototype.setWin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.searcher.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResult} returns this
 */
proto.searcher.BundleResult.prototype.clearWin = function() {
  return this.setWin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResult.prototype.hasWin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BundleResultAuctionLoose loose = 3;
 * @return {?proto.searcher.BundleResultAuctionLoose}
 */
proto.searcher.BundleResult.prototype.getLoose = function() {
  return /** @type{?proto.searcher.BundleResultAuctionLoose} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultAuctionLoose, 3));
};


/**
 * @param {?proto.searcher.BundleResultAuctionLoose|undefined} value
 * @return {!proto.searcher.BundleResult} returns this
*/
proto.searcher.BundleResult.prototype.setLoose = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.searcher.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResult} returns this
 */
proto.searcher.BundleResult.prototype.clearLoose = function() {
  return this.setLoose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResult.prototype.hasLoose = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BundleResultInterrupted drop = 4;
 * @return {?proto.searcher.BundleResultInterrupted}
 */
proto.searcher.BundleResult.prototype.getDrop = function() {
  return /** @type{?proto.searcher.BundleResultInterrupted} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultInterrupted, 4));
};


/**
 * @param {?proto.searcher.BundleResultInterrupted|undefined} value
 * @return {!proto.searcher.BundleResult} returns this
*/
proto.searcher.BundleResult.prototype.setDrop = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.searcher.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResult} returns this
 */
proto.searcher.BundleResult.prototype.clearDrop = function() {
  return this.setDrop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResult.prototype.hasDrop = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BundleResultAuctionFailed failure = 5;
 * @return {?proto.searcher.BundleResultAuctionFailed}
 */
proto.searcher.BundleResult.prototype.getFailure = function() {
  return /** @type{?proto.searcher.BundleResultAuctionFailed} */ (
    jspb.Message.getWrapperField(this, proto.searcher.BundleResultAuctionFailed, 5));
};


/**
 * @param {?proto.searcher.BundleResultAuctionFailed|undefined} value
 * @return {!proto.searcher.BundleResult} returns this
*/
proto.searcher.BundleResult.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.searcher.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.BundleResult} returns this
 */
proto.searcher.BundleResult.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.BundleResult.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.searcher);
